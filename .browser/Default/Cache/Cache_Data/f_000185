{"availableCount":85,"searchTerms":[],"userState":"7e5b49ba-1844-4402-8a84-cbdc0be0e441","resources":[{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_ncp.example/bt_ncp/bt_ncp.slcp","text":"Bluetooth - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application. Runs the Bluetooth stack dynamically and provides access to it via Bluetooth API (BGAPI) using UART connection. NCP mode makes it possible to run your application on a host controller or PC.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_ncp/readme.md"],"description":"Network Co-Processor (NCP) target application with additional features to support the Electronic Shelf Label Profile ESL Access Point role. Note: Some BLE features unused by the ESL Access Point are removed compared to the NCP target application.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_ncp_esl_ap.example/bt_ncp/bt_ncp_esl_ap.slcp","text":"Bluetooth - NCP ESL Access Point","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application with additional features to support the Electronic Shelf Label Profile ESL Access Point role. Note: Some BLE features unused by the ESL Access Point are removed compared to the NCP target application.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rcp/readme.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_rcp.example/bt_rcp/bt_rcp.slcp","text":"Bluetooth - RCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over a UART connection.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_rcp/readme_rcp_cpc.md"],"description":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_rcp_cpc.example/bt_rcp/bt_rcp_cpc.slcp","text":"Bluetooth - RCP CPC","priority":9999999,"category":"SOFTWARE","toolTipText":"Radio Co-Processor (RCP) target application. Runs the Bluetooth Controller (i.e. the Link Layer only) and provides access to it using the standard HCI (Host-Controller Interface) over CPC (Co-Processor Communication) protocol through UART connection.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_blinky/readme.md"],"description":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_blinky.example/bt_soc_blinky/bt_soc_blinky.slcp","text":"Bluetooth - SoC Blinky","priority":9999999,"category":"SOFTWARE","toolTipText":"The classic blinky example using Bluetooth communication. Demonstrates a simple two-way data exchange over GATT. This can be tested with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_empty/readme.md"],"description":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_empty.example/bt_soc_empty/bt_soc_empty.slcp","text":"Bluetooth - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"A minimal project structure, that serves as a starting point for custom Bluetooth applications. The application starts advertising after boot and restarts advertising after a connection is closed.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_iop_test/readme.md"],"description":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_iop_test_log.example/bt_soc_iop_test/bt_soc_iop_test_log.slcp","text":"Bluetooth - SoC Interoperability Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a test procedure containing several test cases for Bluetooth Low Energy communication. This demo is meant to be used with the EFR Connect mobile app, through the \"Interoperability Test\" tile on the Develop view of the app.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer/readme.md"],"description":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_thermometer_mock.example/bt_soc_thermometer/bt_soc_thermometer_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock)","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Server with the Health Thermometer Profile, which enables a Client device to connect and get temperature data. Temperature is read from the mock relative humidity and temperature sensor.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_thermometer_freertos_mock.example/bt_soc_thermometer/bt_soc_thermometer_freertos_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock) FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of FreeRTOS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer/readme_rtos.md"],"description":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_thermometer_micriumos_mock.example/bt_soc_thermometer/bt_soc_thermometer_micriumos_mock.slcp","text":"Bluetooth - SoC Thermometer (Mock) Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the integration of Micrium OS into Bluetooth applications. RTOS is added to the Bluetooth - SoC Thermometer (Mock) sample app.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_thermometer_client/readme.md"],"description":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_thermometer_client.example/bt_soc_thermometer_client/bt_soc_thermometer_client.slcp","text":"Bluetooth - SoC Thermometer Client","priority":9999999,"category":"SOFTWARE","toolTipText":"Implements a GATT Client that discovers and connects with up to 4 BLE devices advertising themselves as Thermometer Servers. It displays the discovery process and the temperature values received via UART.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_throughput/readme.md"],"description":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_throughput_log_single.example/bt_soc_throughput/bt_soc_throughput_log_single.slcp","text":"Bluetooth - SoC Throughput (single button)","priority":9999999,"category":"SOFTWARE","toolTipText":"This example tests the throughput capabilities of the device and can be used to measure throughput between 2 *EFR32* devices, as well as between a device and a smartphone using EFR Connect mobile app, through the Throughput demo tile.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_soc_ibeacon/readme.md"],"description":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_soc_ibeacon.example/bt_soc_ibeacon/bt_soc_ibeacon.slcp","text":"Bluetooth - SoC iBeacon","priority":9999999,"category":"SOFTWARE","toolTipText":"Sends non-connectable advertisements in iBeacon format. The iBeacon Service gives Bluetooth accessories a simple and convenient way to send iBeacons to smartphones. This example can be tested together with the EFR Connect mobile app.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/bluetooth/example/bt_aoa_soc_asset_tag/readme.md"],"description":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA).","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_aoa_soc_asset_tag.example/bt_aoa_soc_asset_tag/bt_aoa_soc_asset_tag.slcp","text":"Bluetooth AoA - SoC Asset Tag","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app demonstrates a CTE (Constant Tone Extension) transmitter that can be used as an asset tag in a Direction Finding setup estimating Angle of Arrival (AoA).\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":[],"description":"Network Co-Processor (NCP) target application extended with CTE Receiver support. It enables Angle of Departure (AoD) calculation. Use this application with Direction Finding Studio tools.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bt_aod_ncp_receiver.example/bt_aod_ncp_receiver/bt_aod_ncp_receiver.slcp","text":"Bluetooth AoD - NCP Receiver","priority":9999999,"category":"SOFTWARE","toolTipText":"Network Co-Processor (NCP) target application extended with CTE Receiver support. It enables Angle of Departure (AoD) calculation. Use this application with Direction Finding Studio tools.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_ncp_empty/readme.md"],"description":"Demonstrates the bare minimum needed for an NCP Target C application.  This example is recommended for EFR32xG22, which has limited RAM and flash, and therefore some of the stack classes are disabled by default.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_ncp_empty.example/btmesh_ncp_empty/btmesh_ncp_empty_xg22.slcp","text":"Bluetooth Mesh - NCP Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the bare minimum needed for an NCP Target C application.  This example is recommended for EFR32xG22, which has limited RAM and flash, and therefore some of the stack classes are disabled by default.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_ambient_light/readme_xg22.md"],"description":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_nlc_sensor_ambient_light.example/btmesh_soc_nlc_sensor_ambient_light/btmesh_soc_nlc_sensor_ambient_light_mock_log_xg22.slcp","text":"Bluetooth Mesh - NLC Ambient Light Sensor (Mock)","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an ambient light sensor in a Networked Lighting Control (NLC) system. The device simulates ambient light measurements and sends these to the network. Properly configured NLC Basic Lightness Controllers then can act on the received data.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_xg22.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_nlc_basic_scene_selector.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_log_xg22.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_basic_scene_selector/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_nlc_basic_scene_selector_low_power.example/btmesh_soc_nlc_basic_scene_selector/btmesh_soc_nlc_basic_scene_selector_low_power.slcp","text":"Bluetooth Mesh - NLC Basic Scene Selector Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Basic Scene Selector in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by scene recall requests.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_xg22.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_nlc_dimming_control.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_log_xg22.slcp","text":"Bluetooth Mesh - NLC Dimming Control","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_dimming_control/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_nlc_dimming_control_low_power.example/btmesh_soc_nlc_dimming_control/btmesh_soc_nlc_dimming_control_low_power.slcp","text":"Bluetooth Mesh - NLC Dimming Control Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a Dimming Control in a Networked Lighting Control (NLC) system. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses control Basic Lightness Controllers in the network by Generic Level Delta or Generic On/Off messages.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_nlc_sensor_occupancy/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_nlc_sensor_occupancy.example/btmesh_soc_nlc_sensor_occupancy/btmesh_soc_nlc_sensor_occupancy_mock_log.slcp","text":"Bluetooth Mesh - NLC Occupancy Sensor","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as an Occupancy Sensor in a Networked Lighting Control (NLC) system. Push Button presses imitate people count changes which can control a properly configured NLC Basic Lightness Controller.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_empty/readme.md"],"description":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_empty.example/btmesh_soc_empty/btmesh_soc_empty.slcp","text":"Bluetooth Mesh - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"Demonstrates the bare minimum needed for a Bluetooth Mesh C application. The application starts Unprovisioned Device Beaconing after booting, and then waits to be provisioned.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_client/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_sensor_client.example/btmesh_soc_sensor_client/btmesh_soc_sensor_client_log_xg22.slcp","text":"Bluetooth Mesh - SoC Sensor Client","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Client Model. It collects and displays sensor measurement data from remote device(s) (e.g., btmesh_soc_sensor_server).\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_sensor_server/readme.md"],"description":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. If available, it measures CPU temperature and uses that data as temperature reading, otherwise it sends mocked temperature data to a remote device (e.g., btmesh_soc_sensor_client).","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_sensor_thermometer.example/btmesh_soc_sensor_thermometer/btmesh_soc_sensor_thermometer_mock_log.slcp","text":"Bluetooth Mesh - SoC Sensor Thermometer","priority":9999999,"category":"SOFTWARE","toolTipText":"This example demonstrates the Bluetooth Mesh Sensor Server Model and Sensor Setup Server Model. If available, it measures CPU temperature and uses that data as temperature reading, otherwise it sends mocked temperature data to a remote device (e.g., btmesh_soc_sensor_client).\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_switch_ctl.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_log_xg22.slcp","text":"Bluetooth Mesh - SoC Switch CTL","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/btmesh/documentation/example/btmesh_soc_switch/readme_low_power.md"],"description":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device. Note - this example is not compatible with the Dimming Control NLC Profile.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.btmesh_soc_switch_ctl_low_power.example/btmesh_soc_switch_ctl/btmesh_soc_switch_ctl_low_power.slcp","text":"Bluetooth Mesh - SoC Switch CTL Low Power","priority":9999999,"category":"SOFTWARE","toolTipText":"An out-of-the-box Software Demo where the device acts as a switch using the Light CTL Client Model. It is optimized for low current consumption with disabled CLI, logging, and LCD. Push Button presses or CLI commands can control the lightness and color temperature of the LEDs on a remote device.\nNote - this example is not compatible with the Dimming Control NLC Profile.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-2/bootloader-uart-bgapi/readme.md"],"description":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-uart-bgapi.sample-apps/Series-2/bootloader-uart-bgapi/bootloader-uart-bgapi.slcp","text":"Bootloader - NCP BGAPI UART DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the BGAPI protocol for UART DFU. This is the recommended UART bootloader for the BLE protocol stack.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-2/bootloader-uart-xmodem/readme.md"],"description":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-uart-xmodem.sample-apps/Series-2/bootloader-uart-xmodem/bootloader-uart-xmodem.slcp","text":"Bootloader - NCP UART XMODEM","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using XMODEM-CRC over UART. The bootloader shows a menu, where an XMODEM transfer can be started by sending ASCII '1', or the application can be started by sending ASCII '2'. This is the recommended UART bootloader for the EmberZNet and Connect protocol stacks.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-2/bootloader-apploader/readme.md"],"description":"Standalone Bootloader using the Bluetooth AppLoader OTA DFU. This implements in-place application updates using Bluetooth connection.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-apploader.sample-apps/Series-2/bootloader-apploader/bootloader-apploader.slcp","text":"Bootloader - SoC Bluetooth AppLoader OTA DFU","priority":9999999,"category":"SOFTWARE","toolTipText":"Standalone Bootloader using the Bluetooth AppLoader OTA DFU. This implements in-place application updates using Bluetooth connection.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-2/bootloader-storage-internal-single-352k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-storage-internal-single-352k.sample-apps/Series-2/bootloader-storage-internal-single-352k/bootloader-storage-internal-single-352k.slcp","text":"Bootloader - SoC Internal Storage (single image on 352kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x28000 (or 0x8028000 for device with 0x8000000 flash base), and have a size of 120 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/Series-2/bootloader-storage-internal-single-512k/readme.md"],"description":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-storage-internal-single-512k.sample-apps/Series-2/bootloader-storage-internal-single-512k/bootloader-storage-internal-single-512k.slcp","text":"Bootloader - SoC Internal Storage (single image on 512kB device)","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample configuration of the Gecko bootloader configures the bootloader to use the internal main flash to store firmware update images. The storage configuration is set up to store a single firmware update image at a time, in a single storage slot. The storage slot is configured to start at address 0x44000 (or 0x8044000 for device with 0x8000000 flash base), and have a size of 192 kB. This can be configured on the \"Storage\" tab.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_ncp_app/readme.md"],"description":"Connect: NCP Application for the SoC","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.connect_ncp.../../protocol/flex/app/ncp-app/connect_ncp.slcp","text":"Connect - NCP","priority":9999999,"category":"SOFTWARE","toolTipText":"Connect: NCP Application for the SoC"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_direct_mode_device/readme.md"],"description":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.connect_soc_direct_mode_device.example/connect/connect_soc_direct_mode_device/connect_soc_direct_mode_device.slcp","text":"Connect - SoC Direct Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample app allows direct commissioning of nodes and exchange data between them via CLI commands."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_ecdh_key_exchange/readme.md"],"description":"This sample application illustrates how to share the network key between multiple devices in a secure way (using Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol).","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.connect_soc_ecdh_key_exchange.example/connect/connect_soc_ecdh_key_exchange/connect_soc_ecdh_key_exchange.slcp","text":"Connect - SoC ECDH Key Exchange","priority":9999999,"category":"SOFTWARE","toolTipText":"This sample application illustrates how to share the network key between multiple devices in a secure way (using Elliptic-curve Diffie-Hellman (ECDH) key agreement protocol)."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_empty/readme.md"],"description":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.connect_soc_empty.example/connect/connect_soc_empty/connect_soc_empty.slcp","text":"Connect - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The Connect Empty project is a barebone Connect app that can be a basis of streamlined proprietary solutions."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_soc_mac_mode_device/readme.md"],"description":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.connect_soc_mac_mode_device.example/connect/connect_soc_mac_mode_device/connect_soc_mac_mode_device.slcp","text":"Connect - SoC MAC Mode Device","priority":9999999,"category":"SOFTWARE","toolTipText":"A 802.15.4 sample app that provides CLI commands to form a network or join an existing network, send data to another node based on short or long addresses."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/connect/connect_sink_sensor/readme.md"],"description":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.connect_soc_sink.example/connect/sensor_sink/connect_soc_sink/connect_soc_sink.slcp","text":"Connect - SoC Sink","priority":9999999,"category":"SOFTWARE","toolTipText":"The Sink example is the counterpart of the Sensor example. It receives reports of Sensor nodes joining to its network."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.cExeProject","text":"Empty C Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":[],"description":"This example project shows an empty configuration that can be used as a starting point to add components and functionality.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.cppExeProject","text":"Empty C++ Project","priority":1,"category":"SOFTWARE","toolTipText":"This example project shows an empty configuration that can be used as a starting point to add components and functionality."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/ml_blink/readme.md"],"description":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.ml_blink.example/ml_blink/ml_blink.slcp","text":"Machine Learning - Blink","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates a model trained to replicate a sine function.  The model is continuously fed with values ranging from 0 to 2pi, and the  output of the model is used to control the intensity of an LED. \n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_baremetal/readme.md"],"description":"This example project shows how to blink an LED in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.blink_baremetal.example/blink_baremetal/blink_baremetal.slcp","text":"Platform - Blink Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED in a bare-metal configuration.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_kernel_freertos/readme.md"],"description":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.blink_kernel_freertos.example/blink_kernel_freertos/blink_kernel_freertos.slcp","text":"Platform - Blink Kernel FreeRTOS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a FreeRTOS kernel task. The blink task can be created using either dynamic or static memory allocation for the task stack and tcb.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_kernel_micriumos/readme.md"],"description":"This example project shows how to blink an LED using a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.blink_kernel_micriumos.example/blink_kernel_micriumos/blink_kernel_micriumos.slcp","text":"Platform - Blink Kernel Micrium OS","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to blink an LED using a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/blink_pwm_baremetal/readme.md"],"description":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.blink_pwm_baremetal.example/blink_pwm_baremetal/blink_pwm_baremetal.slcp","text":"Platform - Blink PWM","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the PWM driver that uses a TIMER to gradually adjust the intensity of an LED up and down.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/dmadrv_baremetal/readme.md"],"description":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.dmadrv_baremetal.example/dmadrv_baremetal/dmadrv_baremetal.slcp","text":"Platform - DMADRV Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to use DMADRV driver to transfer data between memory and a USART peripheral in a bare-metal configuration.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/iostream_eusart_baremetal/readme.md"],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.iostream_eusart_baremetal.example/iostream_eusart_baremetal/iostream_eusart_baremetal.slcp","text":"Platform - I/O Stream EUSART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/iostream_eusart_kernel_micriumos/readme.md"],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.iostream_eusart_kernel_micriumos.example/iostream_eusart_kernel_micriumos/iostream_eusart_kernel_micriumos.slcp","text":"Platform - I/O Stream EUSART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of EUSART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/iostream_usart_baremetal/readme.md"],"description":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.iostream_usart_baremetal.example/iostream_usart_baremetal/iostream_usart_baremetal.slcp","text":"Platform - I/O Stream USART Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a bare-metal configuration  to demonstrate the use of UART communication over the virtual COM port (VCOM). The  application will echo back any characters it receives over the serial connection. The  VCOM serial port can be used either over USB or by connecting to port 4902 if the kit  is connected via Ethernet. \n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/iostream_usart_kernel_micriumos/readme.md"],"description":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.iostream_usart_kernel_micriumos.example/iostream_usart_kernel_micriumos/iostream_usart_kernel_micriumos.slcp","text":"Platform - I/O Stream USART on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses the I/O Stream service running in a Micrium OS kernel task to demonstrate the use of UART communication over the virtual COM port (VCOM). The application will echo back any characters it receives over the serial connection. The VCOM serial port can be used either over USB or by connecting to port 4902 if the kit is connected via Ethernet. \n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mpu_simple_baremetal/readme.md"],"description":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.mpu_simple_baremetal.example/mpu_simple_baremetal/mpu_simple_baremetal.slcp","text":"Platform - MPU Simple","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the use of the Simple MPU module. Its purpose is to block the execution of code from RAM in order to prevent code injection attacks. In this example,  some fake malicious executable code is copied to RAM and executed with the MPU disabled and  re-enabled to demonstrate its effectiveness. \n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/nvm3_baremetal/readme.md"],"description":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.nvm3_baremetal.example/nvm3_baremetal/nvm3_baremetal.slcp","text":"Platform - NVM3 Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates use of the NVM3 interface. Using the command line interface, the user can write, read and delete NVM3 data objects through the serial connection. The number of writes and deletes are tracked in counter objects.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/simple_button_baremetal/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.simple_button_baremetal.example/simple_button_baremetal/simple_button_baremetal.slcp","text":"Platform - Simple Button Bare-metal","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a bare-metal environment.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/simple_button_kernel_micriumos/readme.md"],"description":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.simple_button_kernel_micriumos.example/simple_button_kernel_micriumos/simple_button_kernel_micriumos.slcp","text":"Platform - Simple Button on Micrium OS kernel","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project shows how to toggle LEDs using buttons in a Micrium OS kernel task.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/sleeptimer_wallclock_baremetal/readme.md"],"description":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.sleeptimer_wallclock_baremetal.example/sleeptimer_wallclock_baremetal/sleeptimer_wallclock_baremetal.slcp","text":"Platform - Sleeptimer Wallclock","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the wallclock interface of the sleeptimer service. The user can get and set the date and time in different formats through the VCOM serial port.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_aead/readme.md"],"description":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_aead.example/psa_crypto_aead/psa_crypto_aead.slcp","text":"Platform Security - SoC PSA Crypto AEAD","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform Authenticated Encryption with Associated Data (AEAD) operations on the supported device.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_asymmetric_key/readme.md"],"description":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_asymmetric_key.example/psa_crypto_asymmetric_key/psa_crypto_asymmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Asymmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses the PSA Crypto API to perform asymmetric key operations on the supported device.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_cipher/readme.md"],"description":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_cipher.example/psa_crypto_cipher/psa_crypto_cipher.slcp","text":"Platform Security - SoC PSA Crypto Cipher","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the unauthenticated cipher API for generic and built-in AES-128 keys.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_dsa/readme.md"],"description":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_dsa.example/psa_crypto_dsa/psa_crypto_dsa.slcp","text":"Platform Security - SoC PSA Crypto DSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDSA and EdDSA digital signature API for generic and built-in ECC keys.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_ecdh/readme.md"],"description":"This example project demonstrates the ECDH key agreement API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_ecdh.example/psa_crypto_ecdh/psa_crypto_ecdh.slcp","text":"Platform Security - SoC PSA Crypto ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the ECDH key agreement API.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_hash/readme.md"],"description":"This example project demonstrates the hash API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_hash.example/psa_crypto_hash/psa_crypto_hash.slcp","text":"Platform Security - SoC PSA Crypto Hash","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the hash API.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_kdf/readme.md"],"description":"This example project demonstrates the Key Derivation Function (KDF) API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_kdf.example/psa_crypto_kdf/psa_crypto_kdf.slcp","text":"Platform Security - SoC PSA Crypto KDF","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Key Derivation Function (KDF) API.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_mac/readme.md"],"description":"This example project demonstrates the Message Authentication Code (MAC) API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_mac.example/psa_crypto_mac/psa_crypto_mac.slcp","text":"Platform Security - SoC PSA Crypto MAC","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the Message Authentication Code (MAC) API.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_symmetric_key/readme.md"],"description":"This example project demonstrates the symmetric key API.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_symmetric_key.example/psa_crypto_symmetric_key/psa_crypto_symmetric_key.slcp","text":"Platform Security - SoC PSA Crypto Symmetric Key","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the symmetric key API.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/psa_crypto_x509/readme.md"],"description":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.psa_crypto_x509.example/psa_crypto_x509/psa_crypto_x509.slcp","text":"Platform Security - SoC PSA Crypto X.509","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project uses opaque ECDSA keys to implement the X.509 standard for certificates in Mbed TLS.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/se_manager_key_provisioning/readme.md"],"description":"This example project demonstrates the key provisioning API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.se_manager_key_provisioning.example/se_manager_key_provisioning/se_manager_key_provisioning.slcp","text":"Platform Security - SoC SE Manager Key Provisioning","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the key provisioning API of SE Manager.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/se_manager_se_firmware_upgrade/readme.md"],"description":"This example project demonstrates the SE firmware upgrade API of SE Manager.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.se_manager_se_firmware_upgrade.example/se_manager_se_firmware_upgrade/se_manager_se_firmware_upgrade.slcp","text":"Platform Security - SoC SE Manager SE Firmware Upgrade","priority":9999999,"category":"SOFTWARE","toolTipText":"This example project demonstrates the SE firmware upgrade API of SE Manager.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mbedtls_aescrypt/readme.md"],"description":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.mbedtls_aescrypt.example/mbedtls_aescrypt/mbedtls_aescrypt.slcp","text":"Platform Security - SoC mbedTLS AES","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators to accelerate the AES encryption and SHA hash functions of mbedTLS.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mbedtls_ecdh/readme.md"],"description":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.mbedtls_ecdh.example/mbedtls_ecdh/mbedtls_ecdh.slcp","text":"Platform Security - SoC mbedTLS ECDH","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators of the supported devices to perform ECDH key generation with mbedTLS.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/mbedtls_ecdsa/readme.md"],"description":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.mbedtls_ecdsa.example/mbedtls_ecdsa/mbedtls_ecdsa.slcp","text":"Platform Security - SoC mbedTLS ECDSA","priority":9999999,"category":"SOFTWARE","toolTipText":"This example uses hardware accelerators on the supported device to perform ECDSA digital signature with mbedTLS.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_ncp/readme_spi.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_simple_trx_ncp_spi.example/rail/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp_spi.slcp","text":"RAIL - NCP Simple TRX with CPC Support (SPI)","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_ncp/readme_vcom.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_simple_trx_ncp.example/rail/rail_soc_simple_trx_ncp/rail_soc_simple_trx_ncp.slcp","text":"RAIL - NCP Simple TRX with CPC Support (VCOM)","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CPC can also be used for sending and showing received messages. To send put '1' or '0x01' into the CPC channel. By default the received packets will be sent to CPC channel, to enable or disable print send '0' or '0x00' in CPC channel. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_empty/readme.md"],"description":"The RAIL Empty project is a barebone RAIL app that can be a basis of proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_empty.example/rail/rail_soc_empty/rail_soc_empty.slcp","text":"RAIL - SoC Empty","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAIL Empty project is a barebone RAIL app that can be a basis of proprietary solutions. This comes prepared with a Single PHY radio configurator and a basic callback function for RAIL. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_emode/readme.md"],"description":"This is a customizable Energy Mode sample application. To control the sample app use the CLI interface over UART. Through CLI you can change the energy mode during different tasks of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function use 'cw x', this will set the radio into Continuous Wave mode with the selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_emode.example/rail/rail_soc_emode/rail_soc_emode.slcp","text":"RAIL - SoC Energy Mode","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a customizable Energy Mode sample application. To control the sample app use the CLI interface over UART. Through CLI you can change the energy mode during different tasks of the sample app, like idle, sending or receiving. To get started send the 'help' command over CLI. To enter Idle mode with different energy levels send 'idle x' where x stand for a number corresponding for an energy mode (0:empty loop, 1:EM1, 2:EM2, 3:EM3). To test the TX function use 'cw x', this will set the radio into Continuous Wave mode with the selected energy level. 'periodic_tx us x' command also useful to test TX function with packets, it will send packets with us microseconds delays, and return into selected x energy mode after it. To test RX functions use 'rx x' or 'periodic_rx us_delay us_rx x' where x is the energy level, us_delay is the periodic delay between RX in microseconds, and us_rx is the length of the RX on in microseconds. To set or get TX power level use 'set_power d_dbm' or 'get_power' where d_dbm stands for the deci-dBm value to set the power level to. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. Note: Due to the higher current consumption of the continuous radio usage, it is recommended to power the board over USB instead of coin cell."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_railtest/readme.md"],"description":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_railtest.example/rail/rail_soc_railtest/rail_soc_railtest.slcp","text":"RAIL - SoC RAILtest","priority":9999999,"category":"SOFTWARE","toolTipText":"The RAILtest application provides a simple tool for testing the radio and the functionality of the RAIL library via CLI. For more advanced usage, developers must write software against the RAIL library and create a custom radio configuration."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_range_test_cli.example/rail/rail_soc_range_test_cli/rail_soc_range_test_cli.slcp","text":"RAIL - SoC Range Test","priority":9999999,"category":"SOFTWARE","toolTipText":"This is a customizable Range Test Sample Application that demonstrates over the air range of the EFR32. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length (7..64 bytes) and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given channel and inspects the packets received. Only packets that are sent with the expected device ID, will be processed. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. For both modes, the channel on which the Tx/Rx radio will operate and the device IDs of the transmitters and receiver radio, can be set. Radio related events can be logged on UART on demand. CLI can be used for setting and starting/stoping the application as well, to start with CLI interface send 'help' over terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_range_test/readme.md"],"description":"This is the Range Test Sample Application that demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_range_test_std_cli.example/rail/rail_soc_range_test_std_cli/rail_soc_range_test_std_cli.slcp","text":"RAIL - SoC Range Test BLE and IEEE802.15.4","priority":9999999,"category":"SOFTWARE","toolTipText":"This is the Range Test Sample Application that demonstrates over the air range of the Silicon Labs boards. 5 predefined PHYs can be used for this: BLE: 125kbps, BLE: 500kbps, BLE: 1Mbps, BLE: 2Mbps, IEEE80215.4: 250kbps. This sample app can act as a Transmitter and a Receiver. Flashing this app into two separate boards makes it possible to test the features and specification of the radio. The sample also provides an example how the RAIL API can be used. In Tx Mode, the user can send packets. Packet length defined by the PHY and the number of packets to transmit (from 500 up to continuous) can be set. Output power can be set in 0.5dBm steps (power setpoint), between -15..+20dBm. Actual minimum and maximum power may vary in different frequencies as well as the power that is actually set by RAIL. The get_power command displays the setpoint first, then actual value. In Rx Mode, the radio listens on the given predefined PHY and inspects the packets received. Packet Error Rate, Bit Error Rate and RSSI of the packets is displayed to inform about the quality of the transmission. Radio related events can be logged on UART on demand. CLI can be used to set and get configuration of the app, and to start and stop it. To get started with CLI send 'help' with a terminal. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx/readme.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'tx' or 'send'. By default the received packets will be printed out in terminal, to enable or disable print enter 'rx 1' ('receive 1') or 'rx 0' ('receive 0') in terminal. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_simple_trx.example/rail/rail_soc_simple_trx/rail_soc_simple_trx.slcp","text":"RAIL - SoC Simple TRX","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes. Both nodes are capable of sending and receiving messages. On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'tx' or 'send'. By default the received packets will be printed out in terminal, to enable or disable print enter 'rx 1' ('receive 1') or 'rx 0' ('receive 0') in terminal. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_std/readme.md"],"description":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes using IEEE Std. 802.15.4 and IEEE Std. 802.15.4g and BLE. Both nodes can send and receive IEEE Std. 802.15.4 and IEEE Std. 802.15.4g or BLE advertising frames. With IEEE Std. 802.15.4 the frame can be sent and received with CSMA/CA, auto-ACK, address filtering and setable Frame Control Frame (available settings: broadcast or unicast). With IEEE Std. 802.15.4g the frame can be sent and received with auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast). On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'send'. By default the received packets will be printed out in terminal. To change standard to BLE, the Flex - RAIL BLE support software component shall be installed under Flex/RAIL/Utilility. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_simple_trx_std.example/rail/rail_soc_simple_trx_std/rail_soc_simple_trx_std.slcp","text":"RAIL - SoC Simple TRX Standards","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of transmit and receive operation between two nodes using IEEE Std. 802.15.4 and IEEE Std. 802.15.4g and BLE. Both nodes can send and receive IEEE Std. 802.15.4 and IEEE Std. 802.15.4g or BLE advertising frames. With IEEE Std. 802.15.4 the frame can be sent and received with CSMA/CA, auto-ACK, address filtering and setable Frame Control Frame (available settings: broadcast or unicast). With IEEE Std. 802.15.4g the frame can be sent and received with auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast). On the WSTK, any button press (PB0/PB1) will send a message. LED1 will toggle on message send and LED0 will toggle on message receive. CLI can also be used for sending and showing received messages. To send enter 'send'. By default the received packets will be printed out in terminal. To change standard to BLE, the Flex - RAIL BLE support software component shall be installed under Flex/RAIL/Utilility. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported. NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, a USB power bank can be used if portability is needed."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/flex/documentation/example/rail/rail_soc_simple_trx_auto_ack/readme.md"],"description":"This application demonstrates the simplest exchange of TX and ACK (software based) operation between two nodes. Both nodes are capable of sending messages and receiving ACKs. On the WSTK, any button press (PB0/PB1) will send a message. LED0 will toggle on message received and LED1 will toggle on ACK receive. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.","id":"template.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.rail_soc_simple_trx_auto_ack.example/rail/rail_soc_simple_trx_auto_ack/rail_soc_simple_trx_auto_ack.slcp","text":"RAIL - SoC Simple TRX with Auto-ACK","priority":9999999,"category":"SOFTWARE","toolTipText":"This application demonstrates the simplest exchange of TX and ACK (software based) operation between two nodes. Both nodes are capable of sending messages and receiving ACKs. On the WSTK, any button press (PB0/PB1) will send a message. LED0 will toggle on message received and LED1 will toggle on ACK receive. With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported."},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/workspaces/bootloader-apploader/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-apploader-workspace.sample-apps/workspaces/bootloader-apploader/bootloader-apploader.slcw","text":"bootloader-apploader-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/workspaces/bootloader-uart-bgapi/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-uart-bgapi-workspace.sample-apps/workspaces/bootloader-uart-bgapi/bootloader-uart-bgapi.slcw","text":"bootloader-uart-bgapi-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/platform/bootloader/sample-apps/workspaces/bootloader-uart-xmodem/readme.md"],"description":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.","id":"template.solution.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.bootloader-uart-xmodem-workspace.sample-apps/workspaces/bootloader-uart-xmodem/bootloader-uart-xmodem.slcw","text":"bootloader-uart-xmodem-workspace","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"TrustZone is used to split into a Secure and Non-Secure bootloader. This workspace contains the secure and non-secure part of the bootloader and builds them together.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/tz_psa_attestation/readme.md"],"description":"This example workspace demonstrates TrustZone for PSA Attestation.","id":"template.solution.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.tz_psa_attestation_ws.example/tz_psa_attestation/tz_psa_attestation_ws.slcw","text":"tz_psa_attestation_ws","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"This example workspace demonstrates TrustZone for PSA Attestation.\n"},{"imageURL":"bundleentry://990.fwk1436734086/icons/projectNew.svg","supportDocuments":["file:/C:/Users/anurag.singh/SimplicityStudio/SDKs/gecko_sdk/app/common/example/tz_psa_crypto_ecdh/readme.md"],"description":"This example workspace demonstrates TrustZone for ECDH key agreement.","id":"template.solution.uc.com.silabs.sdk.stack.super:4.4.3._-901403601.tz_psa_crypto_ecdh_ws.example/tz_psa_crypto_ecdh/tz_psa_crypto_ecdh_ws.slcw","text":"tz_psa_crypto_ecdh_ws","priority":9999999,"category":"SOFTWARE_SOLUTION","toolTipText":"This example workspace demonstrates TrustZone for ECDH key agreement.\n"}],"filters":[{"futureCount":0,"anySelected":false,"id":0,"filters":[{"futureCount":15,"anySelected":false,"id":0,"filters":[],"title":"Bluetooth","parentId":0,"selected":false},{"futureCount":12,"anySelected":false,"id":1,"filters":[],"title":"Bluetooth Mesh","parentId":0,"selected":false},{"futureCount":6,"anySelected":false,"id":2,"filters":[],"title":"Connect","parentId":0,"selected":false},{"futureCount":10,"anySelected":false,"id":3,"filters":[],"title":"RAIL","parentId":0,"selected":false}],"title":"Wireless Technology","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":1,"filters":[{"futureCount":11,"anySelected":false,"id":0,"filters":[],"title":"NCP","parentId":1,"selected":false},{"futureCount":2,"anySelected":false,"id":1,"filters":[],"title":"RCP","parentId":1,"selected":false},{"futureCount":70,"anySelected":false,"id":2,"filters":[],"title":"SoC","parentId":1,"selected":false}],"title":"Device Type","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":2,"filters":[{"futureCount":32,"anySelected":false,"id":0,"filters":[],"title":"32-bit MCU","parentId":2,"selected":false},{"futureCount":8,"anySelected":false,"id":1,"filters":[],"title":"Bootloader","parentId":2,"selected":false}],"title":"MCU","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":3,"filters":[{"futureCount":1,"anySelected":false,"id":0,"filters":[],"title":"Machine Learning","parentId":3,"selected":false}],"title":"Capability","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":4,"filters":[{"futureCount":46,"anySelected":false,"id":0,"filters":[],"title":"Advanced","parentId":4,"selected":false},{"futureCount":37,"anySelected":false,"id":1,"filters":[],"title":"Beginner","parentId":4,"selected":false}],"title":"Project Difficulty","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":5,"filters":[{"futureCount":2,"anySelected":false,"id":0,"filters":[],"title":"None Specified","parentId":5,"selected":false},{"futureCount":83,"anySelected":false,"id":1,"filters":[],"title":"Production","parentId":5,"selected":false}],"title":"Quality","parentId":-1,"selected":false},{"futureCount":0,"anySelected":false,"id":6,"filters":[{"futureCount":85,"anySelected":false,"id":0,"filters":[],"title":"Gecko SDK Suite v4.4.3","parentId":6,"selected":false}],"title":"Provider","parentId":-1,"selected":false}],"totalCount":85}
